/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-15 09:53:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.movie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write(" \r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("	<title>영화 추가</title>\r\n");
      out.write("	<style>input[type=\"number\"]::-webkit-outer-spin-button,input[type=\"number\"]::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;}</style>\r\n");
      out.write("</head>\r\n");
      out.write(" \r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("    <div class=\"container mt-3\">\r\n");
      out.write("    	<br><br><br>\r\n");
      out.write("        <h2>영화 추가</h2>\r\n");
      out.write("        <hr>\r\n");
      out.write("        <form name=\"frm\" action=\"write\" method=\"post\"\r\n");
      out.write("        	enctype=\"Multipart/form-data\">\r\n");
      out.write("            <div class=\"mb-3 mt-3\">\r\n");
      out.write("                <label for=\"subject\">제목:</label>\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"제목을 입력하세요\" name=\"title\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3 mt-3\">\r\n");
      out.write("                <label for=\"subject\">장르:</label>\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"genre\" placeholder=\"장르를 입력하세요\" name=\"genre\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3 mt-3\">\r\n");
      out.write("                <label for=\"subject\">상영시간:</label>\r\n");
      out.write("                <input type=\"number\" class=\"form-control\" id=\"runtime\" placeholder=\"상영시간을 입력하세요\" name=\"runtime\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3 mt-3\">\r\n");
      out.write("                <label for=\"subject\">감독:</label>\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"director\" placeholder=\"감독을 입력하세요\" name=\"director\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3 mt-3\">\r\n");
      out.write("                <label for=\"subject\">출연:</label>\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"actor\" placeholder=\"출연배우들을 입력하세요\" name=\"actor\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3 mt-3\">\r\n");
      out.write("                <label for=\"content\">시놉시스:</label>\r\n");
      out.write("                <textarea class=\"form-control\" rows=\"10\" id=\"synopsis\" placeholder=\"시놉시스를 입력하세요\" name=\"synopsis\"></textarea>\r\n");
      out.write("            </div>\r\n");
      out.write("			\r\n");
      out.write("			<!-- 첨부파일 -->\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("			<div class=\"container mt-3 mb-3 border rounded\">\r\n");
      out.write("			    <div class=\"mb-3 mt-3\">\r\n");
      out.write("			        <label>영화 포스터</label>\r\n");
      out.write("			        <div id=\"files\">\r\n");
      out.write("			       		<div class=\"input-group mb-2\">\r\n");
      out.write("		                	<input class=\"form-control col-xs-3\" type=\"file\" name=\"upfile\"/>\r\n");
      out.write("		                </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("			    </div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 첨부파일 -->\r\n");
      out.write("			\r\n");
      out.write("            <button type=\"submit\" class=\"btn btn-outline-dark\">작성완료</button>\r\n");
      out.write("            <a class=\"btn btn-outline-dark\" href=\"home\">취소</a>\r\n");
      out.write("        </form><br><br><br>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write(" \r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
